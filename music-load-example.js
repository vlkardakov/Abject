const yts = require('yt-search')
const ytdl = require('ytdl-core')
const fs = require('fs')
const readline = require('readline')

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
})

rl.question('–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞: ', async (input) => {
    try {
        const songName = input.trim()
        const fileName = songName.toLowerCase().replace(/ /g, '_') + '.mp3'

        console.log('üîç –ò—â–µ–º –Ω–∞ —é—Ç—É–±—á–∏–∫–µ...')
        const res = await yts(songName)
        if (!res.videos.length) {
            console.log('‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üò¢')
            rl.close()
            return
        }

        const video = res.videos[0]
        console.log(`‚úÖ –ù–∞—à—ë–ª: ${video.title}`)
        console.log('üéß –ö–∞—á–∞—é –∞—É–¥–∏–æ...')

        const stream = ytdl(video.url, { filter: 'audioonly' })
        stream.pipe(fs.createWriteStream(fileName))

        stream.on('end', () => {
            console.log(`üéâ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ ${fileName}`)
            rl.close()
        })

        stream.on('error', (err) => {
            console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∫–µ:', err)
            rl.close()
        })

    } catch (err) {
        console.error('üí• –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:', err)
        rl.close()
    }
})
