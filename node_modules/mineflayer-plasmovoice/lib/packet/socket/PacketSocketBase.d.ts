import EventEmitter from "events";
import Core from "../../Core";
import ByteArrayDataInput from "../../data/encoder/ByteArrayDataInput";
import ByteArrayDataOutput from "../../data/encoder/ByteArrayDataOutput";
export default abstract class PacketSocketBase<T extends Object> extends EventEmitter {
    private readonly name;
    private readonly index;
    private readonly core;
    abstract deserialize(packet: ByteArrayDataInput): T;
    abstract serialize(data: T): ByteArrayDataOutput;
    constructor(core: Core, index: number, name: string);
    send(data: T): void;
}
