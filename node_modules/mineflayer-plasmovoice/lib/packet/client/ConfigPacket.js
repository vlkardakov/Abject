"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const CaptureInfo_1 = require("../../data/encoder/obj/CaptureInfo");
const EncryptionInfo_1 = require("../../data/encoder/obj/EncryptionInfo");
const VoiceActivation_1 = require("../../data/encoder/obj/VoiceActivation");
const VoiceSourceLine_1 = require("../../data/encoder/obj/VoiceSourceLine");
const PacketUtil_1 = __importDefault(require("../../data/encoder/PacketUtil"));
const ClientPacketBase_1 = __importDefault(require("./ClientPacketBase"));
class ConfigPacket extends ClientPacketBase_1.default {
    constructor(bot) {
        super(bot, 3, "ConfigPacket");
    }
    serialize() {
        throw "Not required for client-side";
    }
    deserialize(packet) {
        const serverId = PacketUtil_1.default.readUUID(packet);
        const captureInfo = CaptureInfo_1.CaptureInfo.deserialize(packet);
        const hasEncryptionInfo = packet.readBoolean();
        const encryptionInfo = hasEncryptionInfo
            ? EncryptionInfo_1.EncryptionInfo.deserialize(packet)
            : undefined;
        // Source Lines
        let sourceLines = new Set();
        const size = packet.readInt();
        for (let i = 0; i < size; i++) {
            sourceLines.add(VoiceSourceLine_1.VoiceSourceLine.deserialize(packet));
        }
        // Activations
        let activations = new Set();
        const activationsSize = packet.readInt();
        for (let i = 0; i < activationsSize; i++) {
            activations.add(VoiceActivation_1.VoiceActivation.deserialize(packet));
        }
        return {
            serverId,
            captureInfo,
            hasEncryptionInfo,
            encryptionInfo,
            sourceLines,
            activations,
        };
    }
}
exports.default = ConfigPacket;
